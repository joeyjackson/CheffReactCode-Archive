type InventoryItem {
  item: String!
  category: String!
  location: String!
  quantity: String
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelInventoryItemConnection {
  items: [InventoryItem]
  nextToken: String
}

input ModelStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}

input ModelIDFilterInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
}

input ModelIntFilterInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  contains: Int
  notContains: Int
  between: [Int]
}

input ModelFloatFilterInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  contains: Float
  notContains: Float
  between: [Float]
}

input ModelBooleanFilterInput {
  ne: Boolean
  eq: Boolean
}

input ModelInventoryItemFilterInput {
  item: ModelStringFilterInput
  category: ModelStringFilterInput
  location: ModelStringFilterInput
  quantity: ModelStringFilterInput
  and: [ModelInventoryItemFilterInput]
  or: [ModelInventoryItemFilterInput]
  not: ModelInventoryItemFilterInput
}

type Query {
  getInventoryItem(id: ID!): InventoryItem
  listInventoryItems(filter: ModelInventoryItemFilterInput, limit: Int, nextToken: String): ModelInventoryItemConnection
}

input CreateInventoryItemInput {
  item: String!
  category: String!
  location: String!
  quantity: String
}

input UpdateInventoryItemInput {
  item: String
  category: String
  location: String
  quantity: String
}

input DeleteInventoryItemInput {
  id: ID
}

type Mutation {
  createInventoryItem(input: CreateInventoryItemInput!): InventoryItem
  updateInventoryItem(input: UpdateInventoryItemInput!): InventoryItem
  deleteInventoryItem(input: DeleteInventoryItemInput!): InventoryItem
}

type Subscription {
  onCreateInventoryItem: InventoryItem @aws_subscribe(mutations: ["createInventoryItem"])
  onUpdateInventoryItem: InventoryItem @aws_subscribe(mutations: ["updateInventoryItem"])
  onDeleteInventoryItem: InventoryItem @aws_subscribe(mutations: ["deleteInventoryItem"])
}
