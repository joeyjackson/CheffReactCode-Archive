type FranchiseAndLocations @model(subscriptions: null) {
  id: ID
  userID: ID! # sub from cognito
  franchise: String!
  location: String!
  latitude: Float!
  longitude: Float!
}

type Products @model(subscriptions: null) @searchable {
  id: ID
  location: String! # FK
  price: Float!
  parValue: Float!
  packSize: String!
  storageType: String!
  supplier: String!
  brand: String
  unit: String!
  itemNumber: Int!
  description: String!
  commonField: String
}

type RecipeMix @model(subscriptions: null) {
  id: ID
  menuID: ID! # FK
  productID: ID! # FK
  quantityUsed: Float!
}

type MenuItems @model(subscriptions: null) {
  id: ID
  price: Float
  location: String! # FK
  menuName: String!
}

type OrderCartItems @model(subscriptions: null) {
  id: ID
  productID: ID! # FK
  quantityToBuy: Float!
  packSizeToBuy: Int!
  subtotalCost: Float!
}

type OrderCarts @model(subscriptions: null) {
  id: ID
  location: String! # FK
  supplyOrderID: ID
  supplyOrderTimestamp: AWSTimestamp
  orderType: String
  totalCost: Float
  sent: Boolean
  acknowledged: Boolean
  shipped: Boolean
  received: Boolean
  paid: Boolean
}

type InventoryCarts @model(subscriptions: null) {
  id: ID
  location: String! # FK
  completed: Boolean!
}

type InventoryCountItems @model(subscriptions: null) @versioned {
  id: ID
  inventoryCartID: ID!
  productID: ID!
  quantityLeft: [Float!]
  version: Int!
}
